name: Next.js Production
on:
  push:
    branches: [ main ]
env:
  APP_NAME: "solo-project-frontend"
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4   
           
      # Generate version
      - name: Generate version
        id: version
        run: |
          VERSION=$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT


      # Login to Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |-
          IMAGE_NAME="${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ steps.version.outputs.version }}"
          docker build -t "${IMAGE_NAME}" .
          docker push "${IMAGE_NAME}"

          IMAGE_LATEST="${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest"
          docker tag "${IMAGE_NAME}" "${IMAGE_LATEST}"
          docker push "${IMAGE_LATEST}"

      # Create GitHub release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: Release v${{ steps.version.outputs.version }}
          body: |
            Release Date: ${{ steps.version.outputs.date }}

            ## Docker Images
            - `${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:latest`
            - `${{ secrets.DOCKER_USERNAME }}/${{ env.APP_NAME }}:${{ steps.version.outputs.version }}`

            ## Changes
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}